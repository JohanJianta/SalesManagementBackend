on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Deploy Docker Image to EC2
    runs-on: ubuntu-latest

    env:
      DOCKERHUB_USERNAME: ${{ vars.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      DOCKER_IMAGE: ${{ vars.DOCKER_IMAGE }}
      DOCKER_CONTAINER: ${{ vars.DOCKER_CONTAINER }}
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_USER: ${{ secrets.EC2_USER }}
      EC2_KEY_PAIR: ${{ secrets.EC2_KEY_PAIR }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: $DOCKERHUB_USERNAME/$DOCKER_IMAGE:latest

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "$EC2_KEY_PAIR" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H $EC2_HOST >> ~/.ssh/known_hosts

      - name: Deploy on EC2
        run: |
          ssh -i ~/.ssh/id_ed25519 $EC2_USER@$EC2_HOST << EOF
            set -e

            docker pull $DOCKERHUB_USERNAME/$DOCKER_IMAGE:latest

            docker stop $DOCKER_CONTAINER || true
            docker rm $DOCKER_CONTAINER || true

            docker run -d \
              --name $DOCKER_CONTAINER \
              --restart always \
              --env-file ~/sales-backend/.env \
              -p 3000:3000 \
              $DOCKERHUB_USERNAME/$DOCKER_IMAGE:latest

            docker image prune -f
          EOF
